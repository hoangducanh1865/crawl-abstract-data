import fitz  # PyMuPDF
import os
import re

# ƒê∆∞·ªùng d·∫´n t·ªõi th∆∞ m·ª•c ch·ª©a file PDF
input_folder = "/Users/hoangducanh/Documents/Hoc o HUST/nhom_anh_minh/crawl-abstract-data/data/input/"  # Thay ƒë·ªïi ƒë∆∞·ªùng d·∫´n
output_folder = "/Users/hoangducanh/Documents/Hoc o HUST/nhom_anh_minh/crawl-abstract-data/data/output/"  # Th∆∞ m·ª•c l∆∞u file text

def get_title(page):
    text_blocks = page.get_text("dict")["blocks"]

    # üìå Bi·∫øn l∆∞u text c√≥ c·ª° ch·ªØ l·ªõn nh·∫•t
    max_font_size = 0
    max_text = ""

    # üìå Duy·ªát qua t·ª´ng kh·ªëi vƒÉn b·∫£n ƒë·ªÉ t√¨m text c√≥ c·ª° ch·ªØ l·ªõn nh·∫•t
    for block in text_blocks:
        if "lines" in block:  # Ki·ªÉm tra n·∫øu c√≥ d√≤ng ch·ªØ
            for line in block["lines"]:
                for span in line["spans"]:  # "spans" ch·ª©a th√¥ng tin v·ªÅ font v√† k√≠ch th∆∞·ªõc ch·ªØ
                    text = span["text"].strip()
                    font_size = span["size"]

                    if font_size > max_font_size:  # C·∫≠p nh·∫≠t n·∫øu c·ª° ch·ªØ l·ªõn h∆°n
                        max_font_size = font_size
                        max_text = text
                    elif font_size == max_font_size:
                        max_text += " " + text
                    elif max_font_size - font_size < 5 and text != "":
                        max_text += " " + text
                    
    return re.sub(r'[<>:"/\\|?*]', '_', max_text) #thay th·∫ø c√°c k√≠ t·ª± ƒë·∫∑c bi·ªát kh√¥ng th·ªÉ l∆∞u th√†nh t√™n file

# Duy·ªát qua t·∫•t c·∫£ c√°c file PDF trong th∆∞ m·ª•c
for filename in os.listdir(input_folder):
    if filename.endswith(".pdf"):  # Ch·ªâ x·ª≠ l√Ω file PDF
        pdf_path = os.path.join(input_folder, filename)
        

        # M·ªü file PDF
        doc = fitz.open(pdf_path)
        page = doc[0]  # Ch·ªâ x√©t trang ƒë·∫ßu ti√™n

        # L·∫•y danh s√°ch ƒë∆∞·ªùng k·∫ª ngang
        horizontal_lines = [
            l for l in page.get_drawings()
            if abs(l["rect"][1] - l["rect"][3]) < 2 and l["type"] == 's' # ƒê∆∞·ªùng k·∫ª ngang
        ]

        if len(horizontal_lines) < 2:
            print("Kh√¥ng t√¨m th·∫•y ƒë·ªß 2 ƒë∆∞·ªùng k·∫ª ngang tr√™n trang ƒë·∫ßu ti√™n!")
            continue
    
        # S·∫Øp x·∫øp ƒë∆∞·ªùng k·∫ª theo v·ªã tr√≠ y (t·ª´ tr√™n xu·ªëng d∆∞·ªõi)
        horizontal_lines.sort(key=lambda l: l["rect"][1])

        # X√°c ƒë·ªãnh v·ªã tr√≠ c·ªßa 2 ƒë∆∞·ªùng k·∫ª ngang ƒë·∫ßu ti√™n
        if len(horizontal_lines) == 2:
            x1 = horizontal_lines[0]["rect"][0]  # V·ªã tr√≠ x b√™n tr√°i c·ªßa ƒë∆∞·ªùng ƒë·∫ßu ti√™n
            y1 = horizontal_lines[0]["rect"][1]  # V·ªã tr√≠ y c·ªßa ƒë∆∞·ªùng ƒë·∫ßu ti√™n
            x2 = horizontal_lines[1]["rect"][2]  # V·ªã tr√≠ x b√™n ph·∫£i c·ªßa ƒë∆∞·ªùng th·ª© hai
            y2 = horizontal_lines[1]["rect"][1]  # V·ªã tr√≠ y c·ªßa ƒë∆∞·ªùng th·ª© hai
        else:
            x1 = horizontal_lines[1]["rect"][0]
            y1 = horizontal_lines[1]["rect"][1]  # V·ªã tr√≠ y c·ªßa ƒë∆∞·ªùng ƒë·∫ßu ti√™n
            x2 = horizontal_lines[2]["rect"][2]
            y2 = horizontal_lines[2]["rect"][1]  # V·ªã tr√≠ y c·ªßa ƒë∆∞·ªùng th·ª© hai
   
        # L·∫•y c√°c kh·ªëi vƒÉn b·∫£n trong kho·∫£ng y1 < text < y2
        text_blocks = page.get_text("blocks")
        extracted_text = [
            block[4] for block in text_blocks if y1 < block[1] < y2 and block[2] >= x1 and block[0] <= x2
        ]

        title = get_title(page)  # L·∫•y ti√™u ƒë·ªÅ ƒë·∫ßu ti√™n
        output_txt = os.path.join(output_folder, f"{title}.txt")

        # Ghi k·∫øt qu·∫£ v√†o file text
        with open(output_txt, "w", encoding="utf-8") as f:
            f.write("\n".join(extracted_text))

        doc.close()

print("X·ª≠ l√Ω xong t·∫•t c·∫£ file PDF!")
